<mxfile host="app.diagrams.net" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36" version="26.1.0">
  <diagram name="Page-1" id="g5vXmAB2UkSqzC7_Wi9n">
    <mxGraphModel dx="1434" dy="772" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="I1259xhRLEgN1ugOB08U-1" value="Item" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeLast=0;collapsible=1;marginBottom=0;rounded=1;shadow=1;strokeWidth=1;fillColor=#d5e8d4;strokeColor=#82b366;glass=0;" parent="1" vertex="1">
          <mxGeometry x="205" y="60" width="205" height="196" as="geometry">
            <mxRectangle x="230" y="140" width="160" height="26" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="I1259xhRLEgN1ugOB08U-3" value="+ name: str" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;rounded=0;shadow=0;html=0;" parent="I1259xhRLEgN1ugOB08U-1" vertex="1">
          <mxGeometry y="26" width="205" height="26" as="geometry" />
        </mxCell>
        <mxCell id="I1259xhRLEgN1ugOB08U-2" value="+  quantity: int" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="I1259xhRLEgN1ugOB08U-1" vertex="1">
          <mxGeometry y="52" width="205" height="26" as="geometry" />
        </mxCell>
        <mxCell id="I1259xhRLEgN1ugOB08U-4" value="- _price: float" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;rounded=0;shadow=0;html=0;" parent="I1259xhRLEgN1ugOB08U-1" vertex="1">
          <mxGeometry y="78" width="205" height="26" as="geometry" />
        </mxCell>
        <mxCell id="I1259xhRLEgN1ugOB08U-6" value="+ describtion: str" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="I1259xhRLEgN1ugOB08U-1" vertex="1">
          <mxGeometry y="104" width="205" height="28" as="geometry" />
        </mxCell>
        <mxCell id="-t2RpOjE0i4wilOCwamS-5" value="+  is_physical: bool" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="I1259xhRLEgN1ugOB08U-1" vertex="1">
          <mxGeometry y="132" width="205" height="26" as="geometry" />
        </mxCell>
        <mxCell id="I1259xhRLEgN1ugOB08U-5" value="" style="line;html=1;strokeWidth=1;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;" parent="I1259xhRLEgN1ugOB08U-1" vertex="1">
          <mxGeometry y="158" width="205" height="8" as="geometry" />
        </mxCell>
        <mxCell id="I1259xhRLEgN1ugOB08U-7" value="+ get_cost(): float" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="I1259xhRLEgN1ugOB08U-1" vertex="1">
          <mxGeometry y="166" width="205" height="30" as="geometry" />
        </mxCell>
        <mxCell id="I1259xhRLEgN1ugOB08U-9" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.004;entryY=0.7;entryDx=0;entryDy=0;entryPerimeter=0;" parent="1" source="I1259xhRLEgN1ugOB08U-11" target="I1259xhRLEgN1ugOB08U-7" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="I1259xhRLEgN1ugOB08U-10" value="Inheritance" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="I1259xhRLEgN1ugOB08U-9" vertex="1" connectable="0">
          <mxGeometry x="-0.0662" y="-2" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="I1259xhRLEgN1ugOB08U-11" value="PhysicalItem" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeLast=0;collapsible=1;marginBottom=0;rounded=1;shadow=1;strokeWidth=1;fillColor=#e1d5e7;strokeColor=#9673a6;" parent="1" vertex="1">
          <mxGeometry x="60" y="311" width="210" height="99" as="geometry">
            <mxRectangle x="130" y="380" width="160" height="26" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="I1259xhRLEgN1ugOB08U-12" value="+  shipping_charge: float" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="I1259xhRLEgN1ugOB08U-11" vertex="1">
          <mxGeometry y="26" width="210" height="26" as="geometry" />
        </mxCell>
        <mxCell id="I1259xhRLEgN1ugOB08U-13" value="" style="line;html=1;strokeWidth=1;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;" parent="I1259xhRLEgN1ugOB08U-11" vertex="1">
          <mxGeometry y="52" width="210" height="8" as="geometry" />
        </mxCell>
        <mxCell id="I1259xhRLEgN1ugOB08U-14" value="+ get_cost(): float" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="I1259xhRLEgN1ugOB08U-11" vertex="1">
          <mxGeometry y="60" width="210" height="26" as="geometry" />
        </mxCell>
        <mxCell id="I1259xhRLEgN1ugOB08U-15" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=1;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="I1259xhRLEgN1ugOB08U-17" target="I1259xhRLEgN1ugOB08U-7" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="I1259xhRLEgN1ugOB08U-16" value="Inheritance" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="I1259xhRLEgN1ugOB08U-15" vertex="1" connectable="0">
          <mxGeometry x="-0.2091" y="-1" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="I1259xhRLEgN1ugOB08U-17" value="DigitalItem" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeLast=0;collapsible=1;marginBottom=0;rounded=1;shadow=1;strokeWidth=1;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="365" y="311" width="165" height="119" as="geometry">
            <mxRectangle x="550" y="140" width="160" height="26" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="I1259xhRLEgN1ugOB08U-18" value="+ URL: string" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="I1259xhRLEgN1ugOB08U-17" vertex="1">
          <mxGeometry y="26" width="165" height="26" as="geometry" />
        </mxCell>
        <mxCell id="I1259xhRLEgN1ugOB08U-19" value="" style="line;html=1;strokeWidth=1;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;" parent="I1259xhRLEgN1ugOB08U-17" vertex="1">
          <mxGeometry y="52" width="165" height="8" as="geometry" />
        </mxCell>
        <mxCell id="I1259xhRLEgN1ugOB08U-20" value="+ get_URL():str" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="I1259xhRLEgN1ugOB08U-17" vertex="1">
          <mxGeometry y="60" width="165" height="26" as="geometry" />
        </mxCell>
        <mxCell id="I1259xhRLEgN1ugOB08U-21" value="&lt;font&gt;attributes&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;textOpacity=60;fontSize=9;" parent="1" vertex="1">
          <mxGeometry x="145" y="100" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="I1259xhRLEgN1ugOB08U-22" value="&lt;font&gt;operations&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;textOpacity=60;fontSize=9;" parent="1" vertex="1">
          <mxGeometry x="145" y="170" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="I1259xhRLEgN1ugOB08U-23" value="ShoppingCart" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeLast=0;collapsible=1;marginBottom=0;rounded=1;shadow=1;strokeWidth=1;fillColor=#dae8fc;strokeColor=#6c8ebf;glass=0;" parent="1" vertex="1">
          <mxGeometry x="540" y="60" width="250" height="210" as="geometry">
            <mxRectangle x="230" y="140" width="160" height="26" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="I1259xhRLEgN1ugOB08U-24" value="+ list_of_items: []" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="I1259xhRLEgN1ugOB08U-23" vertex="1">
          <mxGeometry y="26" width="250" height="26" as="geometry" />
        </mxCell>
        <mxCell id="I1259xhRLEgN1ugOB08U-28" value="" style="line;html=1;strokeWidth=1;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;" parent="I1259xhRLEgN1ugOB08U-23" vertex="1">
          <mxGeometry y="52" width="250" height="8" as="geometry" />
        </mxCell>
        <mxCell id="I1259xhRLEgN1ugOB08U-29" value="+ add_Items()" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="I1259xhRLEgN1ugOB08U-23" vertex="1">
          <mxGeometry y="60" width="250" height="30" as="geometry" />
        </mxCell>
        <mxCell id="-t2RpOjE0i4wilOCwamS-1" value="+ remove_item(): bool" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="I1259xhRLEgN1ugOB08U-23" vertex="1">
          <mxGeometry y="90" width="250" height="30" as="geometry" />
        </mxCell>
        <mxCell id="-t2RpOjE0i4wilOCwamS-2" value="+ get_all_items(): str" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="I1259xhRLEgN1ugOB08U-23" vertex="1">
          <mxGeometry y="120" width="250" height="30" as="geometry" />
        </mxCell>
        <mxCell id="-t2RpOjE0i4wilOCwamS-3" value="+ calculate_cost(): float" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="I1259xhRLEgN1ugOB08U-23" vertex="1">
          <mxGeometry y="150" width="250" height="30" as="geometry" />
        </mxCell>
        <mxCell id="-t2RpOjE0i4wilOCwamS-4" value="+ calculate_shipping_charges(): float" style="text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="I1259xhRLEgN1ugOB08U-23" vertex="1">
          <mxGeometry y="180" width="250" height="30" as="geometry" />
        </mxCell>
        <mxCell id="-t2RpOjE0i4wilOCwamS-8" value="&lt;div style=&quot;line-height: 100%;&quot;&gt;&lt;div style=&quot;border-top: none; border-right: none; border-left: none; border-image: initial; border-bottom: 1.5pt solid windowtext; margin-left: 18pt; margin-right: 0cm;&quot;&gt;&lt;p style=&quot;text-indent:-18.0pt;mso-list:l2 level1 lfo3&quot; class=&quot;MsoListParagraphCxSpFirst&quot;&gt;A)&lt;span style=&quot;font-variant-numeric: normal; font-variant-east-asian: normal; font-variant-alternates: normal; font-size-adjust: none; font-kerning: auto; font-optical-sizing: auto; font-feature-settings: normal; font-variation-settings: normal; font-variant-position: normal; font-variant-emoji: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &amp;quot;Times New Roman&amp;quot;;&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;br&gt;&lt;/span&gt;OOP- it’s a computer programming model that&lt;br&gt;organises software design around data or objects rather than functions. This&lt;br&gt;approach to programming is well suited for software that is large, complex and&lt;br&gt;actively updated or maintained.&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;OOP focuses on the object that developers&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;want to manipulate rather than the logic required to manipulate them. For&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;example, OOP can be used for manufacturing system simulation software.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;MsoListParagraphCxSpMiddle&quot;&gt;Structure of OOP:&lt;/p&gt;&lt;p style=&quot;margin-left:54.0pt;mso-add-space:&lt;br/&gt;auto;text-indent:-18.0pt;mso-list:l5 level1 lfo4&quot; class=&quot;MsoListParagraphCxSpMiddle&quot;&gt;- Classes&lt;/p&gt;&lt;p style=&quot;margin-left:54.0pt;mso-add-space:&lt;br/&gt;auto;text-indent:-18.0pt;mso-list:l5 level1 lfo4&quot; class=&quot;MsoListParagraphCxSpMiddle&quot;&gt;- Objects&lt;span style=&quot;font-family: &amp;quot;Times New Roman&amp;quot;; font-size: 7pt; text-indent: -18pt; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left:54.0pt;mso-add-space:&lt;br/&gt;auto;text-indent:-18.0pt;mso-list:l5 level1 lfo4&quot; class=&quot;MsoListParagraphCxSpMiddle&quot;&gt;- Methods&lt;span style=&quot;font-family: &amp;quot;Times New Roman&amp;quot;; font-size: 7pt; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left:54.0pt;mso-add-space:&lt;br/&gt;auto;text-indent:-18.0pt;mso-list:l5 level1 lfo4&quot; class=&quot;MsoListParagraphCxSpMiddle&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- Attributes&lt;/span&gt;&lt;/p&gt;&lt;br&gt;&lt;p class=&quot;MsoNormal&quot;&gt;Advantages:&lt;/p&gt;&lt;p style=&quot;text-indent:-18.0pt;mso-list:l4 level1 lfo1&quot; class=&quot;MsoListParagraphCxSpFirst&quot;&gt;1.&lt;span style=&quot;font-variant-numeric: normal; font-variant-east-asian: normal; font-variant-alternates: normal; font-size-adjust: none; font-kerning: auto; font-optical-sizing: auto; font-feature-settings: normal; font-variation-settings: normal; font-variant-position: normal; font-variant-emoji: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &amp;quot;Times New Roman&amp;quot;;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;Reusability- code can be reused trough&lt;br&gt;inheritance, team does not have to write the same code multiple times.&lt;/p&gt;&lt;p style=&quot;text-indent:-18.0pt;mso-list:l4 level1 lfo1&quot; class=&quot;MsoListParagraphCxSpMiddle&quot;&gt;2.&lt;span style=&quot;font-variant-numeric: normal; font-variant-east-asian: normal; font-variant-alternates: normal; font-size-adjust: none; font-kerning: auto; font-optical-sizing: auto; font-feature-settings: normal; font-variation-settings: normal; font-variant-position: normal; font-variant-emoji: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &amp;quot;Times New Roman&amp;quot;;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;Productivity- programmers can construct new&lt;br&gt;programs quickly through the use of multiple libraries, classes. Independent&lt;br&gt;working.&lt;/p&gt;&lt;p style=&quot;text-indent:-18.0pt;mso-list:l4 level1 lfo1&quot; class=&quot;MsoListParagraphCxSpMiddle&quot;&gt;3.&lt;span style=&quot;font-variant-numeric: normal; font-variant-east-asian: normal; font-variant-alternates: normal; font-size-adjust: none; font-kerning: auto; font-optical-sizing: auto; font-feature-settings: normal; font-variation-settings: normal; font-variant-position: normal; font-variant-emoji: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &amp;quot;Times New Roman&amp;quot;;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;L&lt;/span&gt;ower cost-comes from reusability as classes and&lt;br&gt;objects can be reused reducing development time and effort.&lt;/p&gt;&lt;p style=&quot;text-align:justify&quot; class=&quot;MsoNormal&quot;&gt;Disadvantages:&lt;/p&gt;&lt;p style=&quot;margin-left:54.0pt;mso-add-space:&lt;br/&gt;auto;text-align:justify;text-indent:-18.0pt;mso-list:l0 level1 lfo6&quot; class=&quot;MsoListParagraphCxSpFirst&quot;&gt;1.&lt;span style=&quot;font-variant-numeric: normal; font-variant-east-asian: normal; font-variant-alternates: normal; font-size-adjust: none; font-kerning: auto; font-optical-sizing: auto; font-feature-settings: normal; font-variation-settings: normal; font-variant-position: normal; font-variant-emoji: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &amp;quot;Times New Roman&amp;quot;;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;Resource heavy&lt;/p&gt;&lt;p style=&quot;margin-left:54.0pt;mso-add-space:&lt;br/&gt;auto;text-align:justify;text-indent:-18.0pt;mso-list:l0 level1 lfo6&quot; class=&quot;MsoListParagraphCxSpMiddle&quot;&gt;2.&lt;span style=&quot;font-variant-numeric: normal; font-variant-east-asian: normal; font-variant-alternates: normal; font-size-adjust: none; font-kerning: auto; font-optical-sizing: auto; font-feature-settings: normal; font-variation-settings: normal; font-variant-position: normal; font-variant-emoji: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &amp;quot;Times New Roman&amp;quot;;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;Not suitable for small projects&lt;/p&gt;&lt;p style=&quot;margin-left:54.0pt;mso-add-space:auto;&lt;br/&gt;text-align:justify;text-indent:-18.0pt;mso-list:l0 level1 lfo6&quot; class=&quot;MsoListParagraphCxSpLast&quot;&gt;3.&lt;span style=&quot;font-variant-numeric: normal; font-variant-east-asian: normal; font-variant-alternates: normal; font-size-adjust: none; font-kerning: auto; font-optical-sizing: auto; font-feature-settings: normal; font-variation-settings: normal; font-variant-position: normal; font-variant-emoji: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &amp;quot;Times New Roman&amp;quot;;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;Advanced and requires experienced developers&lt;/p&gt;&lt;br&gt;&lt;br&gt;&lt;p class=&quot;MsoNormal&quot;&gt;Principles:&lt;/p&gt;&lt;p style=&quot;text-indent:-18.0pt;mso-list:l1 level1 lfo2&quot; class=&quot;MsoListParagraphCxSpFirst&quot;&gt;1.&lt;span style=&quot;font-variant-numeric: normal; font-variant-east-asian: normal; font-variant-alternates: normal; font-size-adjust: none; font-kerning: auto; font-optical-sizing: auto; font-feature-settings: normal; font-variation-settings: normal; font-variant-position: normal; font-variant-emoji: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &amp;quot;Times New Roman&amp;quot;;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;Encapsulation-helps to control who can access or&lt;br&gt;change the data inside your class object. This allows to write clean, readable,&lt;br&gt;and efficient code and prevent accidental changes or deletion of class data.&lt;/p&gt;&lt;p style=&quot;text-indent:-18.0pt;mso-list:l1 level1 lfo2&quot; class=&quot;MsoListParagraphCxSpMiddle&quot;&gt;2.&lt;span style=&quot;font-variant-numeric: normal; font-variant-east-asian: normal; font-variant-alternates: normal; font-size-adjust: none; font-kerning: auto; font-optical-sizing: auto; font-feature-settings: normal; font-variation-settings: normal; font-variant-position: normal; font-variant-emoji: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &amp;quot;Times New Roman&amp;quot;;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;Abstraction- hides unnecessary details and only&lt;br&gt;shows the important parts of an object or process. It provides a simpler&lt;br&gt;interface. It helps make code simpler and easier to use by focusing on what&lt;br&gt;something does instead of how it works.&lt;/p&gt;&lt;p style=&quot;text-indent:-18.0pt;mso-list:l1 level1 lfo2&quot; class=&quot;MsoListParagraphCxSpMiddle&quot;&gt;3.&lt;span style=&quot;font-variant-numeric: normal; font-variant-east-asian: normal; font-variant-alternates: normal; font-size-adjust: none; font-kerning: auto; font-optical-sizing: auto; font-feature-settings: normal; font-variation-settings: normal; font-variant-position: normal; font-variant-emoji: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &amp;quot;Times New Roman&amp;quot;;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background: lime;&quot;&gt;Inheritance&lt;/span&gt;-&lt;span style=&quot;font-size: 11.5pt; line-height: 107%; font-family: Verdana, sans-serif; background: white;&quot;&gt; &lt;/span&gt;Inheritance allows&amp;nbsp; to define a class that inherits all the&lt;br&gt;methods and properties from another class. &lt;b&gt;Parent class&lt;/b&gt;&amp;nbsp;is the&lt;br&gt;class being inherited from, also called base class. &lt;b&gt;Child class&lt;/b&gt;&amp;nbsp;is&lt;br&gt;the class that inherits from another class, also called derived class.&lt;/p&gt;&lt;p style=&quot;text-indent:-18.0pt;mso-list:l1 level1 lfo2&quot; class=&quot;MsoListParagraphCxSpLast&quot;&gt;4.&lt;span style=&quot;font-variant-numeric: normal; font-variant-east-asian: normal; font-variant-alternates: normal; font-size-adjust: none; font-kerning: auto; font-optical-sizing: auto; font-feature-settings: normal; font-variation-settings: normal; font-variant-position: normal; font-variant-emoji: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &amp;quot;Times New Roman&amp;quot;;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background: lime;&quot;&gt;Polymorphism&lt;/span&gt;-&lt;br&gt;allows the same action to be performed in different ways, depending of the&lt;br&gt;object using it. It helps make code flexible and reusable by allowing one&lt;br&gt;function or method to work with different types of data. &lt;/p&gt;&lt;p style=&quot;margin-left:54.0pt;mso-add-space:&lt;br/&gt;auto;text-indent:-18.0pt;mso-list:l5 level1 lfo4&quot; class=&quot;MsoListParagraphCxSpFirst&quot;&gt;&lt;span style=&quot;font-variant-numeric: normal; font-variant-east-asian: normal; font-variant-alternates: normal; font-size-adjust: none; font-kerning: auto; font-optical-sizing: auto; font-feature-settings: normal; font-variation-settings: normal; font-variant-position: normal; font-variant-emoji: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &amp;quot;Times New Roman&amp;quot;;&quot;&gt;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-indent:-18.0pt;mso-list:l2 level1 lfo3&quot; class=&quot;MsoListParagraphCxSpMiddle&quot;&gt;B)&lt;span style=&quot;font-variant-numeric: normal; font-variant-east-asian: normal; font-variant-alternates: normal; font-size-adjust: none; font-kerning: auto; font-optical-sizing: auto; font-feature-settings: normal; font-variation-settings: normal; font-variant-position: normal; font-variant-emoji: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &amp;quot;Times New Roman&amp;quot;;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;Abstraction and encapsulation in OOP&lt;/p&gt;&lt;p class=&quot;MsoListParagraphCxSpMiddle&quot;&gt;&lt;span style=&quot;background: lime;&quot;&gt;Abstraction-&lt;/span&gt; Abstraction is about focusing on the essentials and&lt;br&gt;ignoring the irrelevant details (&lt;b&gt;hiding unnecessary details and only showing&lt;br&gt;the important parts, controlling the access&lt;/b&gt;).&lt;/p&gt;&lt;p class=&quot;MsoListParagraphCxSpMiddle&quot;&gt;&amp;nbsp;It allows programmers to handle complexity by breaking down systems into simpler, more manageable pieces.&lt;span style=&quot;font-size: 15pt; line-height: 107%; color: rgb(36, 36, 36); letter-spacing: -0.05pt;&quot;&gt; &lt;/span&gt;In programming, abstraction is achieved using interfaces and&lt;br&gt;abstract classes. These constructs define a blueprint for what methods a class&lt;br&gt;should have, without specifying the actual implementation.&lt;/p&gt;&lt;p class=&quot;MsoListParagraphCxSpMiddle&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;How encapsulation contributes to&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;maintainable software:&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left:54.0pt;mso-add-space:&lt;br/&gt;auto;text-indent:-18.0pt;mso-list:l3 level1 lfo5&quot; class=&quot;MsoListParagraphCxSpMiddle&quot;&gt;&lt;span style=&quot;font-family:Wingdings;mso-fareast-font-family:Wingdings;mso-bidi-font-family:&lt;br/&gt;Wingdings&quot;&gt;v&lt;span style=&quot;font-variant-numeric: normal; font-variant-east-asian: normal; font-variant-alternates: normal; font-size-adjust: none; font-kerning: auto; font-optical-sizing: auto; font-feature-settings: normal; font-variation-settings: normal; font-variant-position: normal; font-variant-emoji: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &amp;quot;Times New Roman&amp;quot;;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;b&gt;Control over data&lt;/b&gt;: prevents unintended&lt;br&gt;access or modifications, which can prevent errors or bugs&lt;/p&gt;&lt;p style=&quot;margin-left:54.0pt;mso-add-space:&lt;br/&gt;auto;text-indent:-18.0pt;mso-list:l3 level1 lfo5&quot; class=&quot;MsoListParagraphCxSpMiddle&quot;&gt;&lt;span style=&quot;font-family:Wingdings;mso-fareast-font-family:Wingdings;mso-bidi-font-family:&lt;br/&gt;Wingdings;mso-bidi-font-weight:bold&quot;&gt;v&lt;span style=&quot;font-variant-numeric: normal; font-variant-east-asian: normal; font-variant-alternates: normal; font-size-adjust: none; font-kerning: auto; font-optical-sizing: auto; font-feature-settings: normal; font-variation-settings: normal; font-variant-position: normal; font-variant-emoji: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &amp;quot;Times New Roman&amp;quot;;&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;b&gt;Code&lt;br&gt;reusability: &lt;/b&gt;an object can be reused&lt;b&gt; &lt;/b&gt;in different contexts&lt;/p&gt;&lt;p style=&quot;margin-left:54.0pt;mso-add-space:&lt;br/&gt;auto;text-indent:-18.0pt;mso-list:l3 level1 lfo5&quot; class=&quot;MsoListParagraphCxSpMiddle&quot;&gt;&lt;span style=&quot;font-family:Wingdings;mso-fareast-font-family:Wingdings;mso-bidi-font-family:&lt;br/&gt;Wingdings;mso-bidi-font-weight:bold&quot;&gt;v&lt;span style=&quot;font-variant-numeric: normal; font-variant-east-asian: normal; font-variant-alternates: normal; font-size-adjust: none; font-kerning: auto; font-optical-sizing: auto; font-feature-settings: normal; font-variation-settings: normal; font-variant-position: normal; font-variant-emoji: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &amp;quot;Times New Roman&amp;quot;;&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;b&gt;Easier&lt;br&gt;to maintain: &lt;/b&gt;easier to maintain, as updates and modifications can be&lt;br&gt;isolated within specific objects without requiring widespread changes&lt;/p&gt;&lt;br&gt;&lt;p class=&quot;MsoListParagraphCxSpMiddle&quot;&gt;&lt;span style=&quot;background: lime;&quot;&gt;Encapsulation&lt;/span&gt;- Encapsulation is about bundling data (fields) and&lt;br&gt;methods (functions) that operate on the data into a single unit, typically a&lt;br&gt;class, and restricting direct access to some of the object’s components. It&lt;br&gt;protects data and ensures that it can only be changed in a controlled manner.&lt;br&gt;Fully describe the entity.&lt;/p&gt;&lt;p class=&quot;MsoListParagraphCxSpMiddle&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p class=&quot;MsoListParagraphCxSpMiddle&quot;&gt;How encapsulation contributes to&lt;br&gt;maintainable software:&lt;/p&gt;&lt;p style=&quot;margin-left:54.0pt;mso-add-space:&lt;br/&gt;auto;text-indent:-18.0pt;mso-list:l3 level1 lfo5&quot; class=&quot;MsoListParagraphCxSpMiddle&quot;&gt;&lt;span style=&quot;font-family:Wingdings;mso-fareast-font-family:Wingdings;mso-bidi-font-family:&lt;br/&gt;Wingdings&quot;&gt;v&lt;span style=&quot;font-variant-numeric: normal; font-variant-east-asian: normal; font-variant-alternates: normal; font-size-adjust: none; font-kerning: auto; font-optical-sizing: auto; font-feature-settings: normal; font-variation-settings: normal; font-variant-position: normal; font-variant-emoji: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &amp;quot;Times New Roman&amp;quot;;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;b&gt;Code flexibility:&lt;/b&gt; allows different&lt;br&gt;implementation of the same functionality&lt;/p&gt;&lt;p style=&quot;margin-left:54.0pt;mso-add-space:auto;&lt;br/&gt;text-indent:-18.0pt;mso-list:l3 level1 lfo5&quot; class=&quot;MsoListParagraphCxSpLast&quot;&gt;&lt;span style=&quot;font-family:Wingdings;mso-fareast-font-family:Wingdings;mso-bidi-font-family:&lt;br/&gt;Wingdings&quot;&gt;v&lt;span style=&quot;font-variant-numeric: normal; font-variant-east-asian: normal; font-variant-alternates: normal; font-size-adjust: none; font-kerning: auto; font-optical-sizing: auto; font-feature-settings: normal; font-variation-settings: normal; font-variant-position: normal; font-variant-emoji: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &amp;quot;Times New Roman&amp;quot;;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;data inside our object is not modified&lt;br&gt;unexpectedly by external code in a completely different part of our program&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-left:54.0pt;mso-add-space:auto;&lt;br/&gt;text-indent:-18.0pt;mso-list:l3 level1 lfo5&quot; class=&quot;MsoListParagraphCxSpLast&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-left:54.0pt;mso-add-space:auto;&lt;br/&gt;text-indent:-18.0pt;mso-list:l3 level1 lfo5&quot; class=&quot;MsoListParagraphCxSpLast&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-left:54.0pt;mso-add-space:auto;&lt;br/&gt;text-indent:-18.0pt;mso-list:l3 level1 lfo5&quot; class=&quot;MsoListParagraphCxSpLast&quot;&gt;Task 4?:&lt;span style=&quot;font-size: 12px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;A)&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-variant-numeric: normal; font-variant-east-asian: normal; font-variant-alternates: normal; font-size-adjust: none; font-kerning: auto; font-optical-sizing: auto; font-feature-settings: normal; font-variation-settings: normal; font-variant-position: normal; font-variant-emoji: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &amp;quot;Times New Roman&amp;quot;;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 12px; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;Briefly explain the concept of test-driven&lt;/span&gt;&lt;/p&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;development and outline the benefits it can have on the software development&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;process&lt;/span&gt;&lt;/div&gt;&lt;p style=&quot;font-size: 12px; text-align: center;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;font-size: 12px; text-align: center; border: none;&quot; class=&quot;MsoNormal&quot;&gt;&lt;/p&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;Test-driven development (TDD) is&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;a&amp;nbsp;&lt;/span&gt;&lt;a style=&quot;background-color: transparent;&quot; target=&quot;_blank&quot; href=&quot;https://www.geeksforgeeks.org/how-to-approach-a-coding-problem/&quot;&gt;method&amp;nbsp;&lt;/a&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;in which you first write a test and it fails,&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;then write the code to pass the test of development, and clean up the code it focuses&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;on an iterative development cycle where the emphasis is placed on writing test&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;cases first.&lt;/span&gt;&lt;/div&gt;&lt;p style=&quot;font-size: 12px; text-align: center;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;font-size: 12px; text-align: center; border: none;&quot; class=&quot;MsoNormal&quot;&gt;&lt;/p&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;This process not only helps&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;ensure correctness of the code -but also helps to indirectly evolve the design&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;and architecture of the project at hand.&lt;/span&gt;&lt;/div&gt;&lt;p style=&quot;font-size: 12px; text-align: center;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;font-size: 12px; text-align: center; border: none;&quot; class=&quot;MsoNormal&quot;&gt;&lt;/p&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&lt;b style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;TDD usually follows the&lt;/b&gt;&lt;/div&gt;&lt;b style=&quot;font-size: 12px; text-align: center;&quot;&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;b style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&quot;Red-Green-Refactor&quot; cycle:&lt;/b&gt;&lt;/div&gt;&lt;/b&gt;&lt;ol style=&quot;font-size: 12px; text-align: center; margin-top: 0cm;&quot; type=&quot;1&quot; start=&quot;1&quot;&gt;&lt;li style=&quot;margin-left: 18pt; border: none;&quot; class=&quot;MsoNormal&quot;&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;Add a test to the test&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;suite&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;&lt;li style=&quot;margin-left: 18pt; border: none;&quot; class=&quot;MsoNormal&quot;&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;(&lt;/span&gt;&lt;b style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;Red&lt;/b&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;) Run all the&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;tests to ensure the new test fails&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;&lt;li style=&quot;margin-left: 18pt; border: none;&quot; class=&quot;MsoNormal&quot;&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;(&lt;/span&gt;&lt;b style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;Green&lt;/b&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;) Write just&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;enough code to get that single test to pass&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;&lt;li style=&quot;text-align: left; margin-left: 18pt; border: none;&quot; class=&quot;MsoNormal&quot;&gt;Run all tests&lt;/li&gt;&lt;li style=&quot;margin-left: 18pt; border: none;&quot; class=&quot;MsoNormal&quot;&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;(&lt;/span&gt;&lt;b style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;Refactor&lt;/b&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;) Improve&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;the initial code while keeping the tests green&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;li style=&quot;text-align: left; margin-left: 18pt; border: none;&quot; class=&quot;MsoNormal&quot;&gt;Repeat&lt;/li&gt;&lt;/ol&gt;&lt;p style=&quot;font-size: 12px; border: none;&quot; class=&quot;MsoNormal&quot;&gt;&lt;b&gt;Benefits:&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;font-size: 12px; text-align: center; border: none;&quot; class=&quot;MsoNormal&quot;&gt;&lt;/p&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- reduced costs- TDD helps find&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;problems early, so less time and money are spent fixing them later. It also&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;makes the code easier to maintain, saving costs in the long run.&lt;/span&gt;&lt;/div&gt;&lt;p style=&quot;font-size: 12px; text-align: center; border: none;&quot; class=&quot;MsoNormal&quot;&gt;&lt;/p&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- prevents bugs- Writing tests&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;before coding helps catch mistakes early, preventing bugs from reaching the&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;final product. This makes the software more reliable and less prone to errors.&lt;/span&gt;&lt;/div&gt;&lt;p style=&quot;font-size: 12px; text-align: center; border: none;&quot; class=&quot;MsoNormal&quot;&gt;&lt;/p&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- improves code pattern - TDD&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;encourages writing clean, simple, and well-organized code. This makes the code easier&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;to understand and update in the future.&lt;/span&gt;&lt;/div&gt;&lt;br style=&quot;font-size: 12px; text-align: center;&quot;&gt;&lt;p style=&quot;font-size: 12px; text-align: center; border: none;&quot; class=&quot;MsoNormal&quot;&gt;- Increase confidence that the&lt;br&gt;code works as expected- With tests showing that the code works correctly,&lt;br&gt;developers can make changes without worrying about breaking things. This builds&lt;br&gt;trust that the software behaves as intended.&lt;/p&gt;&lt;span style=&quot;font-size: 12px; text-align: center;&quot;&gt;B)&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 12px; text-align: center; background-color: transparent;&quot;&gt;Unit testing could be&lt;br&gt;implemented by creating new file and importing unittest.&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 12px; text-align: center; background-color: transparent;&quot;&gt;Unittest is a python library&lt;br&gt;used for testing code. The&amp;nbsp;unittest&amp;nbsp;package has an object-oriented&lt;br&gt;approach where test cases derive from a base class, which has several useful&lt;br&gt;methods.&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-size: 12px; text-align: center; background-color: transparent;&quot;&gt;unittest has lots of methods to&lt;br&gt;assert on the values, types, and existence of variables.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontSize=10;textOpacity=10;" parent="1" vertex="1">
          <mxGeometry x="20" y="930" width="550" height="1930" as="geometry" />
        </mxCell>
        <mxCell id="-t2RpOjE0i4wilOCwamS-35" value="&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;Task 2:&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;Items class serves as Parent (super) class.&lt;/div&gt;&lt;div&gt;&lt;p style=&quot;text-align: left;&quot; class=&quot;MsoNormal&quot;&gt;&lt;b&gt;Attributes:&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;text-indent:-18.0pt;mso-list:l0 level1 lfo1&quot; class=&quot;MsoListParagraphCxSpFirst&quot;&gt;&lt;/p&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;text-indent: -18pt; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-family: Wingdings;&quot;&gt;v&lt;span style=&quot;font-variant-numeric: normal; font-variant-east-asian: normal; font-variant-alternates: normal; font-size-adjust: none; font-kerning: auto; font-optical-sizing: auto; font-feature-settings: normal; font-variation-settings: normal; font-variant-position: normal; font-variant-emoji: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &amp;quot;Times New Roman&amp;quot;;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;b style=&quot;text-indent: -18pt; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+name: str&lt;/b&gt;&lt;span style=&quot;text-indent: -18pt; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt; &amp;nbsp;(Public) attribute representing the item&#39;s&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;text-indent: -18pt; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;name.&lt;/span&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;&lt;p style=&quot;text-indent:-18.0pt;mso-list:l0 level1 lfo1&quot; class=&quot;MsoListParagraphCxSpMiddle&quot;&gt;&lt;/p&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;text-indent: -18pt; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-family: Wingdings;&quot;&gt;v&lt;/span&gt;&lt;b style=&quot;text-indent: -18pt; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+quantity: int&lt;/b&gt;&lt;span style=&quot;text-indent: -18pt; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt; &amp;nbsp;(Public) attribute indicating how many units&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;text-indent: -18pt; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;of the item are in stock.&lt;/span&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;&lt;p style=&quot;text-indent:-18.0pt;mso-list:l0 level1 lfo1&quot; class=&quot;MsoListParagraphCxSpMiddle&quot;&gt;&lt;/p&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;text-indent: -18pt; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-family: Wingdings;&quot;&gt;v&lt;span style=&quot;font-variant-numeric: normal; font-variant-east-asian: normal; font-variant-alternates: normal; font-size-adjust: none; font-kerning: auto; font-optical-sizing: auto; font-feature-settings: normal; font-variation-settings: normal; font-variant-position: normal; font-variant-emoji: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &amp;quot;Times New Roman&amp;quot;;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;b style=&quot;text-indent: -18pt; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;-_price: float&lt;/b&gt;&lt;span style=&quot;text-indent: -18pt; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt; &amp;nbsp;(private) attribute storing the price of the&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;text-indent: -18pt; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;item (not accessible outside the class directly).&lt;/span&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;&lt;p style=&quot;text-indent:-18.0pt;mso-list:l0 level1 lfo1&quot; class=&quot;MsoListParagraphCxSpMiddle&quot;&gt;&lt;/p&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;text-indent: -18pt; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-family: Wingdings;&quot;&gt;v&lt;span style=&quot;font-variant-numeric: normal; font-variant-east-asian: normal; font-variant-alternates: normal; font-size-adjust: none; font-kerning: auto; font-optical-sizing: auto; font-feature-settings: normal; font-variation-settings: normal; font-variant-position: normal; font-variant-emoji: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &amp;quot;Times New Roman&amp;quot;;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;b style=&quot;text-indent: -18pt; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+description: str&lt;/b&gt;&lt;span style=&quot;text-indent: -18pt; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt; &amp;nbsp;(public) attribute providing details about the&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;text-indent: -18pt; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;item&lt;/span&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;&lt;p style=&quot;text-indent:-18.0pt;mso-list:l0 level1 lfo1&quot; class=&quot;MsoListParagraphCxSpMiddle&quot;&gt;&lt;/p&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;text-indent: -18pt; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-family: Wingdings;&quot;&gt;v&lt;span style=&quot;font-variant-numeric: normal; font-variant-east-asian: normal; font-variant-alternates: normal; font-size-adjust: none; font-kerning: auto; font-optical-sizing: auto; font-feature-settings: normal; font-variation-settings: normal; font-variant-position: normal; font-variant-emoji: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &amp;quot;Times New Roman&amp;quot;;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;b style=&quot;text-indent: -18pt; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+is_physical: bool&lt;/b&gt;&lt;span style=&quot;text-indent: -18pt; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt; → (public) attribute&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;text-indent: -18pt; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;indicating whether the item is a physical product (True) or digital (False).&lt;/span&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; text-indent: -18pt;&quot; class=&quot;MsoListParagraphCxSpMiddle&quot;&gt;&lt;span style=&quot;text-indent: -18pt; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-family: &amp;quot;Courier New&amp;quot;;&quot;&gt;&lt;span style=&quot;font-variant-numeric: normal; font-variant-east-asian: normal; font-variant-alternates: normal; font-size-adjust: none; font-kerning: auto; font-optical-sizing: auto; font-feature-settings: normal; font-variation-settings: normal; font-variant-position: normal; font-variant-emoji: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &amp;quot;Times New Roman&amp;quot;;&quot;&gt;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;b style=&quot;text-indent: -18pt; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;Methods:&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;text-indent:-18.0pt;mso-list:l0 level1 lfo1&quot; class=&quot;MsoListParagraphCxSpLast&quot;&gt;&lt;/p&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;text-indent: -18pt; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-family: Wingdings;&quot;&gt;v&lt;/span&gt;&lt;b style=&quot;text-indent: -18pt; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+get_cost(): float&lt;/b&gt;&lt;span style=&quot;text-indent: -18pt; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt; A method that&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;text-indent: -18pt; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;calculates and returns the total cost of the item.&lt;/span&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;&quot; class=&quot;MsoNormal&quot;&gt;&lt;b&gt;Class: PhysicalItem ()&lt;/b&gt;&lt;/p&gt;&lt;p class=&quot;MsoListParagraphCxSpFirst&quot;&gt;&lt;/p&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;The PhysicalItem class inherits from Item&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;and represents physical products that require shipping.&lt;/span&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;&quot; class=&quot;MsoListParagraphCxSpFirst&quot;&gt;&lt;span style=&quot;text-indent: -18pt; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-family: &amp;quot;Courier New&amp;quot;;&quot;&gt;&lt;span style=&quot;font-variant-numeric: normal; font-variant-east-asian: normal; font-variant-alternates: normal; font-size-adjust: none; font-kerning: auto; font-optical-sizing: auto; font-feature-settings: normal; font-variation-settings: normal; font-variant-position: normal; font-variant-emoji: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &amp;quot;Times New Roman&amp;quot;;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;b style=&quot;text-indent: -18pt; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;Additional&amp;nbsp;&lt;/b&gt;&lt;b style=&quot;text-indent: -18pt; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;Attributes:&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;text-indent:-18.0pt;mso-list:l3 level1 lfo2&quot; class=&quot;MsoListParagraphCxSpMiddle&quot;&gt;&lt;/p&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;text-indent: -18pt; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-family: Wingdings;&quot;&gt;v&lt;span style=&quot;font-variant-numeric: normal; font-variant-east-asian: normal; font-variant-alternates: normal; font-size-adjust: none; font-kerning: auto; font-optical-sizing: auto; font-feature-settings: normal; font-variation-settings: normal; font-variant-position: normal; font-variant-emoji: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &amp;quot;Times New Roman&amp;quot;;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;b style=&quot;text-indent: -18pt; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+shipping_charge: float&lt;/b&gt;&lt;span style=&quot;text-indent: -18pt; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt; &amp;nbsp;( Public) attribute specifying the additional&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;text-indent: -18pt; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;cost for shipping.&lt;/span&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; text-indent: -18pt;&quot; class=&quot;MsoListParagraphCxSpMiddle&quot;&gt;&lt;b style=&quot;text-indent: -18pt; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;Overridden&amp;nbsp;&lt;/b&gt;&lt;b style=&quot;text-indent: -18pt; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;Methods:&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;text-indent:-18.0pt;mso-list:l3 level1 lfo2&quot; class=&quot;MsoListParagraphCxSpLast&quot;&gt;&lt;/p&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;text-indent: -18pt; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-family: Wingdings;&quot;&gt;v&lt;span style=&quot;font-variant-numeric: normal; font-variant-east-asian: normal; font-variant-alternates: normal; font-size-adjust: none; font-kerning: auto; font-optical-sizing: auto; font-feature-settings: normal; font-variation-settings: normal; font-variant-position: normal; font-variant-emoji: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &amp;quot;Times New Roman&amp;quot;;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;b style=&quot;text-indent: -18pt; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+get_cost(): float&lt;/b&gt;&lt;span style=&quot;text-indent: -18pt; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt; → This method&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;text-indent: -18pt; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;overrides get_cost() from the Item class to include shipping charges in the&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;text-indent: -18pt; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;total cost. This is an example of &lt;/span&gt;&lt;b style=&quot;text-indent: -18pt; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;polymorphism.&lt;/b&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;&quot; class=&quot;MsoNormal&quot;&gt;&lt;b&gt;Class: DigitalItem( )&lt;/b&gt;&lt;/p&gt;&lt;p class=&quot;MsoNormal&quot;&gt;&lt;/p&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;The DigitalItem class is a child class created from Item super&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;class.&lt;/span&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;&quot; class=&quot;MsoNormal&quot;&gt;&lt;b&gt;Additional Attributes:&lt;/b&gt;&lt;/p&gt;&lt;ul type=&quot;disc&quot; style=&quot;margin-top:0cm&quot;&gt; &lt;li class=&quot;MsoNormal&quot;&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;b style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+URL:&lt;/b&gt;&lt;/div&gt;&lt;b&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;b style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;string&lt;/b&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-weight: normal;&quot;&gt; (Public) attribute that stores the download or access URL for&lt;/span&gt;&lt;/div&gt;&lt;/b&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;the digital product.&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;text-align: left;&quot; class=&quot;MsoNormal&quot;&gt;&lt;b&gt;Additional Methods:&lt;/b&gt;&lt;/p&gt;&lt;ul type=&quot;disc&quot; style=&quot;margin-top:0cm&quot;&gt; &lt;li class=&quot;MsoNormal&quot;&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;b style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;+get_URL():&lt;/b&gt;&lt;/div&gt;&lt;b&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;b style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;str&lt;/b&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); font-weight: normal;&quot;&gt; &amp;nbsp;A method that returns the&lt;/span&gt;&lt;/div&gt;&lt;/b&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;URL where the digital item can be accessed.&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;_______&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;TASK 3:&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;class Item:&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp;def __init__(self, name: str,quantity:int,price:float, describtion:str, is_physical:bool):&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &quot;&quot;&quot;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; super class, serves as super all subclasses (items) created&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;Args:&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; item_name (str): Name of the item.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; describtion (str): Description of the item.&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; _price (float): Price of the item.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; is_physical (bool): Indicates if the item is a physical product (True) or a digital product (False).&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; Notes:&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; - Quantity is not passed as it is initialized to 0 by default.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; - This serves as a base class for various item types.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &quot;&quot;&quot;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; self.name=name&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; self.quantity=quantity&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; self._price=price&amp;nbsp; ##not specified in the task but needed to calculate total cost&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; self.describtion=describtion&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; self.is_physical=is_physical ### Boolean flag to check if the item is physical.(Needed to determine shipping charges)&amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp;def get_cost(self)-&amp;gt; float:&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;&quot;&quot;&quot;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;return&#39;s item price calculated * item quantity&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;RETURNS:&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;float&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;&quot;&quot;&quot;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;total_price=float(self._price)*self.quantity&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;return total_price&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;class PhysicalItem(Item):&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp;&quot;&quot;&quot;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;Constructor method to initialize a PhysicalItem object&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp;&quot;&quot;&quot;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp;def __init__(self,name: str,quantity:int,price:float,is_physical, describtion:str, shipping_charge:float):&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; # Call the constructor of the parent class (Item)&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; super().__init__(name, quantity,price,describtion, is_physical=True)&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; self.shipping_charge=shipping_charge&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp;def get_cost(self):&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;&quot;&quot;&quot;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;returns item cost from parent method and adds shipping charge for each item added&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;RETURNS:&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; float&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;&quot;&quot;&quot;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;total_price=super().get_cost() # gets total cost from method in ITEM class&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;total_price+=float(self.shipping_charge)* float(self.quantity) # Add shipping cost per item (each item has SHIPPING COST)&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;return total_price&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;class VirtualItem(Item):&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp;def __init__(self, name, quantity,price, describtion,is_physical, URL:str):&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; super().__init__(name, quantity, price,describtion, is_physical=False)&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &quot;&quot;&quot;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; Child of Item class (super class)&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; Adds URL to virtual item.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &quot;&quot;&quot;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; self.URL=URL&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp;def get_URL(self):&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &quot;&quot;&quot;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; RETURNS string&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &quot;&quot;&quot;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; return self.URL&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;class ShoppingCart:&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp;def __init__(self):&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &quot;&quot;&quot;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; A class representing a shopping cart, allowing users to add, remove,&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; and show all items added to shopping cart.&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; ARGS:&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; list_of_items initially empty as the shopping cart is empty until user adds items&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &quot;&quot;&quot;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; self.list_of_items: list[PhysicalItem|VirtualItem]=[] ##initiated as empty list&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp;def add_items(self, item):&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &quot;&quot;&quot;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; Adds item to shopping cart (to the list)&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; ARGS:&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;passing item we want to add&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &quot;&quot;&quot;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; self.list_of_items.append(item)&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp;def remove_item(self,item):&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &quot;&quot;&quot;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; Removes an item from the shopping cart (list of items).&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; Behavior:&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; - If the specified item is found in the cart, it is removed from the list.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; - Returns : bool&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &quot;&quot;&quot;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; if item in self.list_of_items:&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;self.list_of_items.remove(item)&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;return True&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; else:&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;return False&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp;def get_all_items(self):&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &quot;&quot;&quot;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; Retrieves the list of all items currently in the shopping cart and returns list as string&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; Behavior:&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; - Returns STRING of items&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &quot;&quot;&quot;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; shopping_bag=&quot;&quot;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; for item in self.list_of_items:&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;shopping_bag+=str(item.name+&quot;,&quot;)&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; return shopping_bag&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp;def calculate_cost(self)-&amp;gt;float:&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &quot;&quot;&quot;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; Calculates the total cost of all items in the shopping cart.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; Behavior:&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; - Iterates through each item in the cart and calculates its total cost by calling the Get_cost() method for each item.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; RETURNS: float&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &quot;&quot;&quot;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; total_cost = 0.0&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; for item in self.list_of_items:&amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; total_cost += float(item.get_cost())&amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; float(total_cost)&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; return total_cost&amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp;def calculate_shipping_fee(self):&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;&quot;&quot;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; Calculates the total shipping fee for all physical items in the shopping cart.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; Behavior:&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; - Iterates through all items in the cart.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; - Checks if an item is physical (`is_physical == True`).&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; - If physical, multiplies the shipping charge by the quantity of the item.&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;RETURNS float&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;&quot;&quot;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; total_shipping_fee = 0&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; for item in self.list_of_items:&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if item.is_physical:&amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; total_shipping_fee += item.shipping_charge * item.quantity&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; return total_shipping_fee&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;##just testing if it actually works&lt;/div&gt;&lt;div style=&quot;&quot;&gt;# item1=PhysicalItem(&quot;HP&quot;, 2, 1000,&quot;this is a good laptop Sheyla&quot;,True,60)&lt;/div&gt;&lt;div style=&quot;&quot;&gt;# item2=PhysicalItem(&quot;dell&quot;, 2, 1000,&quot;this is a good laptop Sheyla&quot;,True,60)&lt;/div&gt;&lt;div style=&quot;&quot;&gt;# item3=PhysicalItem(&quot;brother&quot;, 2, 1000,&quot;this is a good laptop Sheyla&quot;,True,60)&lt;/div&gt;&lt;div style=&quot;&quot;&gt;# cart = ShoppingCart()&lt;/div&gt;&lt;div style=&quot;&quot;&gt;# cart.add_items(item1)&lt;/div&gt;&lt;div style=&quot;&quot;&gt;# cart.add_items(item2)&lt;/div&gt;&lt;div style=&quot;&quot;&gt;# cart.add_items(item3)&lt;/div&gt;&lt;div style=&quot;&quot;&gt;# print(cart.get_all_items())&lt;/div&gt;&lt;div style=&quot;&quot;&gt;# print(cart.calculate_cost())&lt;/div&gt;&lt;div style=&quot;&quot;&gt;# print(cart.calculate_shipping_fee())&lt;/div&gt;&lt;/span&gt;&lt;/div&gt;&lt;/ul&gt;&lt;ul type=&quot;disc&quot; style=&quot;margin-top:0cm&quot;&gt;&lt;div style=&quot;border-top: none; border-right: none; border-left: none; border-image: initial; border-bottom: 1.5pt solid windowtext; margin-left: 18pt; margin-right: 0cm;&quot;&gt;&lt;p style=&quot;margin-left:18.0pt;mso-add-space:auto;&lt;br/&gt;text-indent:-18.0pt;mso-list:l0 level1 lfo1;border:none;mso-border-bottom-alt:&lt;br/&gt;solid windowtext 1.5pt;padding:0cm;mso-padding-alt:0cm 0cm 1.0pt 0cm&quot; class=&quot;MsoListParagraph&quot;&gt;&lt;/p&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/ul&gt;&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;textOpacity=10;" parent="1" vertex="1">
          <mxGeometry x="570" y="2150" width="460" height="1810" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
